{"ast":null,"code":"import _classCallCheck from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/src/routes/Route.js\";\nimport React, { Component } from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Header from '../pages/app/header/header';\nimport Drawer from '../pages/app/drawer/Index'; // import DemoContainer from '../container/demo';\n\nimport { store } from '../index';\nimport FormIndex from '../pages/Form/index';\nimport DemoComponent from '../pages/dashboard/index';\nimport ApiRouteComponent from '../pages/integration/index';\nimport Auto from '../pages/autoComplete/Auto';\n/**\n * This function checks wheather the user is logged in or logged out.\n * isAuthenticated === true - logged in\n * isAuthenticated === false - logged out\n * \n * we can change it, but its name needs to be the same and\n *  it needs to return a true or false resemblance values\n */\n\nexport function checkAuth() {\n  var auth = store.getState().LoginReducer.auth;\n  var isAuthenticated = auth.isAuthenticated;\n  return isAuthenticated;\n}\n\nvar RouteComponent = /*#__PURE__*/function (_Component) {\n  _inherits(RouteComponent, _Component);\n\n  var _super = _createSuper(RouteComponent);\n\n  function RouteComponent() {\n    _classCallCheck(this, RouteComponent);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(RouteComponent, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard-wrappper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(Drawer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: this.props.toggleStatus ? \"dashboard-content-body\" : \"dashboard-content-body closed\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"main\", {\n        className: \"main-content-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/form\",\n        component: FormIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Auto,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/demo\",\n        component: DemoComponent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/api/getData\",\n        component: ApiRouteComponent,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }\n      })))));\n    }\n  }]);\n\n  return RouteComponent;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var toggleStatus = state.appReducer.toggleStatus;\n  var auth = state.LoginReducer.auth;\n  return {\n    toggleStatus: toggleStatus,\n    auth: auth\n  };\n}\n\nexport default withRouter(connect(mapStateToProps)(RouteComponent));","map":{"version":3,"sources":["/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/src/routes/Route.js"],"names":["React","Component","Route","Switch","withRouter","connect","Header","Drawer","store","FormIndex","DemoComponent","ApiRouteComponent","Auto","checkAuth","auth","getState","LoginReducer","isAuthenticated","RouteComponent","props","toggleStatus","mapStateToProps","state","appReducer"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,QAAyC,kBAAzC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,MAAP,MAAmB,2BAAnB,C,CACA;;AACA,SAAQC,KAAR,QAAoB,UAApB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA;;;;;;;;;AAQA,OAAO,SAASC,SAAT,GAAqB;AAAA,MACjBC,IADiB,GACTN,KAAK,CAACO,QAAN,GAAiBC,YADR,CACjBF,IADiB;AAAA,MAEjBG,eAFiB,GAEEH,IAFF,CAEjBG,eAFiB;AAGxB,SAAOA,eAAP;AACH;;IAEKC,c;;;;;;;;;;;;;6BACO;AACL,0BACQ;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI;AAAK,QAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,YAAX,GAA0B,wBAA1B,GAAqD,+BAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAM,QAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAEX,SAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAsB,QAAA,SAAS,EAAEG,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,OAAlB;AAA0B,QAAA,SAAS,EAAEF,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,eAII,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,cAAlB;AAAiC,QAAA,SAAS,EAAEC,iBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADJ,CADJ,CAHJ,CADR;AAgBH;;;;EAlBwBV,S;;AAoB7B,SAASoB,eAAT,CAAyBC,KAAzB,EAAgC;AAAA,MACrBF,YADqB,GACLE,KAAK,CAACC,UADD,CACrBH,YADqB;AAAA,MAErBN,IAFqB,GAEbQ,KAAK,CAACN,YAFO,CAErBF,IAFqB;AAG5B,SAAO;AAACM,IAAAA,YAAY,EAAZA,YAAD;AAAcN,IAAAA,IAAI,EAAJA;AAAd,GAAP;AACH;;AAED,eAAeV,UAAU,CAACC,OAAO,CAACgB,eAAD,CAAP,CAAyBH,cAAzB,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Switch, withRouter} from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Header from '../pages/app/header/header';\nimport Drawer from '../pages/app/drawer/Index';\n// import DemoContainer from '../container/demo';\nimport {store} from '../index'\nimport FormIndex from '../pages/Form/index';\nimport DemoComponent from '../pages/dashboard/index'\nimport ApiRouteComponent from '../pages/integration/index'\nimport Auto from '../pages/autoComplete/Auto';\n/**\n * This function checks wheather the user is logged in or logged out.\n * isAuthenticated === true - logged in\n * isAuthenticated === false - logged out\n * \n * we can change it, but its name needs to be the same and\n *  it needs to return a true or false resemblance values\n */\nexport function checkAuth() {\n    const {auth} = store.getState().LoginReducer;\n    const {isAuthenticated} = auth;\n    return isAuthenticated\n}\n\nclass RouteComponent extends Component {\n    render() {\n        return (\n                <div className=\"dashboard-wrappper\">\n                    <Header />\n                    <Drawer/>\n                    <div className={this.props.toggleStatus ? \"dashboard-content-body\" : \"dashboard-content-body closed\"}>\n                        <main className=\"main-content-wrapper\">\n                            <Switch>\n                                <Route path=\"/form\" component={FormIndex} />\n                                <Route exact path=\"/\" component={Auto} />\n                                <Route exact path=\"/demo\" component={DemoComponent} /> \n                                <Route exact path=\"/api/getData\" component={ApiRouteComponent}/>\n                            </Switch>\n                        </main>\n                    </div>\n                </div>\n        )\n    }\n}\nfunction mapStateToProps(state) {\n    const {toggleStatus} = state.appReducer;\n    const {auth} = state.LoginReducer;\n    return {toggleStatus,auth}\n}\n\nexport default withRouter(connect(mapStateToProps)(RouteComponent));"]},"metadata":{},"sourceType":"module"}