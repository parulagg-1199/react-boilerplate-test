{"ast":null,"code":"import _objectSpread from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/src/pages/integration/EditData/index.js\";\nimport React, { Component } from 'react';\nimport { putData as _putData } from './actions';\nimport { getData as _getData, getDataWithId as _getDataWithId } from '../../integration/ListData/actions';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './dist/style.css';\n\nvar EditData = /*#__PURE__*/function (_Component) {\n  _inherits(EditData, _Component);\n\n  var _super = _createSuper(EditData);\n\n  function EditData(props) {\n    var _this;\n\n    _classCallCheck(this, EditData);\n\n    _this = _super.call(this, props);\n\n    _this.formSubmitHandler = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          title = _this$state.title,\n          image = _this$state.image;\n      var id = _this.props.match.params.id;\n      var updData = {\n        id: id,\n        title: title,\n        image: image\n      };\n\n      _this.props.putData(updData);\n\n      alert(\"Image has been updated successfully\"); //To clear data\n\n      _this.setState({\n        title: '',\n        image: ''\n      });\n\n      _this.props.getData();\n\n      var invalidElmsInput = document.querySelectorAll(\".form-group input:invalid\");\n\n      for (var i = 0; i < invalidElmsInput.length; i++) {\n        invalidElmsInput[i].parentElement.classList.add(\"has-error\");\n      }\n    };\n\n    _this.state = {\n      formControls: {\n        title: {\n          value: '',\n          placeholder: 'Add image title',\n          touched: false\n        },\n        image: {\n          value: '',\n          placeholder: 'Add image URL',\n          touched: false\n        }\n      }\n    };\n    return _this;\n  }\n\n  _createClass(EditData, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log('component', this.props.dataWithId);\n      var id = this.props.match.params.id;\n      console.log('componentDidMount', id); // //this.props.getDataWithId(id);\n      // //const { title, image } = this.props.dataWithId;\n      // this.setState({\n      //   title,\n      //   image\n      // });\n    }\n  }, {\n    key: \"onTitleChange\",\n    value: function onTitleChange(event) {\n      var name = event.target.name;\n      var value = event.target.value;\n\n      if (event.target.checkValidity()) {\n        event.target.parentElement.classList.remove('has-error');\n      } else {\n        event.target.parentElement.classList.add('has-error');\n      }\n\n      var updatedControls = _objectSpread({}, this.state.formControls);\n\n      var updatedFormElement = _objectSpread({}, this.state.formControls[name]);\n\n      updatedFormElement.value = value.replace(/  +/g, ' ');\n      updatedControls[name] = updatedFormElement;\n      this.setState({\n        formControls: updatedControls\n      });\n    }\n  }, {\n    key: \"onImageChange\",\n    value: function onImageChange(event) {\n      var name = event.target.name;\n      var value = event.target.value;\n\n      if (event.target.checkValidity()) {\n        event.target.parentElement.classList.remove('has-error');\n      } else {\n        event.target.parentElement.classList.add('has-error');\n      }\n\n      var updatedControls = _objectSpread({}, this.state.formControls);\n\n      var updatedFormElement = _objectSpread({}, this.state.formControls[name]);\n\n      updatedFormElement.value = value.replace(/  +/g, ' ');\n      updatedControls[name] = updatedFormElement;\n      this.setState({\n        formControls: updatedControls\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          title = _this$state2.title,\n          image = _this$state2.image;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard-content-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, \"Update Image\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.formSubmitHandler.bind(this),\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 45\n        }\n      }, \"Title\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"req\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 57\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"title\",\n        className: \"form-ctrl\",\n        type: \"text\",\n        required: true,\n        minLength: 3,\n        maxLength: 40,\n        pattern: \"([a-zA-Z]\\.+\\\\s)*[a-zA-Z]+$\",\n        placeholder: this.state.formControls.title.placeholder,\n        value: title,\n        onChange: this.onTitleChange.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 45\n        }\n      }, \"Only Alphabets are accepted. (Min 3 characters required)\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-4 col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 45\n        }\n      }, \"Image URL\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"req\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 61\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"image\",\n        type: \"text\",\n        required: true,\n        minLength: 3,\n        maxLength: 40,\n        className: \"form-ctrl\",\n        pattern: \"([a-zA-Z]\\.+\\\\s)*[a-zA-Z]+$\",\n        placeholder: this.state.formControls.image.placeholder,\n        value: image,\n        onChange: this.onImageChange.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 45\n        }\n      }, \"Please enter valid URL\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn mt-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 33\n        }\n      }, \"  Submit \"))))));\n    }\n  }]);\n\n  return EditData;\n}(Component);\n\nfunction mapStateToProps(state) {\n  var _state$ImageReducer = state.ImageReducer,\n      data = _state$ImageReducer.data,\n      dataWithId = _state$ImageReducer.dataWithId;\n  return {\n    data: data,\n    dataWithId: dataWithId\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getData: function getData(get) {\n      return dispatch(_getData(get));\n    },\n    getDataWithId: function getDataWithId(gett) {\n      return dispatch(_getDataWithId(gett));\n    },\n    putData: function putData(put) {\n      return dispatch(_putData(put));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditData));","map":{"version":3,"sources":["/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/src/pages/integration/EditData/index.js"],"names":["React","Component","putData","getData","getDataWithId","withRouter","connect","EditData","props","formSubmitHandler","e","preventDefault","state","title","image","id","match","params","updData","alert","setState","invalidElmsInput","document","querySelectorAll","i","length","parentElement","classList","add","formControls","value","placeholder","touched","console","log","dataWithId","event","name","target","checkValidity","remove","updatedControls","updatedFormElement","replace","bind","onTitleChange","onImageChange","mapStateToProps","ImageReducer","data","mapDispatchToProps","dispatch","get","gett","put"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { putData } from './actions';\nimport { getData, getDataWithId } from '../../integration/ListData/actions'\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport './dist/style.css'\n\nclass EditData extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            formControls: {\n                title: {\n                    value: '',\n                    placeholder: 'Add image title',\n                    touched: false\n                },\n                image: {\n                    value: '',\n                    placeholder: 'Add image URL',\n                    touched: false\n                },\n            }\n        }\n    }\n\n    componentDidMount() {\n        console.log('component', this.props.dataWithId);\n        const { id } = this.props.match.params;\n        console.log('componentDidMount', id);\n        // //this.props.getDataWithId(id);\n        // //const { title, image } = this.props.dataWithId;\n        // this.setState({\n        //   title,\n        //   image\n        // });\n    }\n\n    formSubmitHandler = (e) => {\n        e.preventDefault();\n\n        const { title, image } = this.state\n\n        const { id } = this.props.match.params;\n\n        const updData = {\n            id,\n            title,\n            image\n        }\n\n        this.props.putData(updData)\n        alert(\"Image has been updated successfully\")\n\n        //To clear data\n        this.setState({\n            title: '',\n            image: ''\n        });\n        this.props.getData()\n\n        const invalidElmsInput = document.querySelectorAll(\".form-group input:invalid\");\n\n        for (let i = 0; i < invalidElmsInput.length; i++) {\n            invalidElmsInput[i].parentElement.classList.add(\"has-error\")\n        }\n    }\n\n    onTitleChange(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        if (event.target.checkValidity()) {\n            event.target.parentElement.classList.remove('has-error');\n        } else {\n            event.target.parentElement.classList.add('has-error');\n        }\n        const updatedControls = {\n            ...this.state.formControls\n        };\n        const updatedFormElement = {\n            ...this.state.formControls[name]\n        };\n        updatedFormElement.value = value.replace(/  +/g, ' ');\n\n        updatedControls[name] = updatedFormElement;\n        this.setState({\n            formControls: updatedControls,\n        });\n    }\n\n    onImageChange(event) {\n        const name = event.target.name;\n        const value = event.target.value;\n\n        if (event.target.checkValidity()) {\n            event.target.parentElement.classList.remove('has-error');\n        } else {\n            event.target.parentElement.classList.add('has-error');\n        }\n        const updatedControls = {\n            ...this.state.formControls\n        };\n        const updatedFormElement = {\n            ...this.state.formControls[name]\n        };\n        updatedFormElement.value = value.replace(/  +/g, ' ');\n\n        updatedControls[name] = updatedFormElement;\n        this.setState({\n            formControls: updatedControls,\n        });\n    }\n\n    render() {\n        const { title, image } = this.state;\n        return (\n            <div className=\"dashboard-content-container\">\n                <h2>Update Image</h2>\n                <div className=\"row\">\n\n                    <div className=\"col-sm-8\">\n\n                        <form onSubmit={this.formSubmitHandler.bind(this)} noValidate={true}>\n                            <div className=\"form-div\">\n\n                                <div className=\"row\">\n                                    <div className=\"col-sm-8\">\n                                        <div className=\"form-group\">\n                                            <label>Title<span className=\"req\">*</span></label>\n                                            <input name=\"title\"\n                                                className=\"form-ctrl\"\n                                                type=\"text\"\n                                                required={true}\n                                                minLength={3}\n                                                maxLength={40}\n                                                pattern={\"([a-zA-Z]\\.+\\\\s)*[a-zA-Z]+$\"}\n                                                placeholder={this.state.formControls.title.placeholder}\n                                                value={title}\n                                                onChange={this.onTitleChange.bind(this)}\n                                            />\n                                            <p className=\"error\">\n                                                Only Alphabets are accepted.\n                                                (Min 3 characters required)\n                                            </p>\n                                        </div>\n                                    </div>\n                                    <div className=\"col-sm-4 col-md-4\">\n                                        <div className=\"form-group\">\n                                            <label>Image URL<span className=\"req\">*</span></label>\n                                            <input name=\"image\" type=\"text\"\n                                                required={true}\n                                                minLength={3}\n                                                maxLength={40}\n                                                className=\"form-ctrl\"\n                                                pattern={\"([a-zA-Z]\\.+\\\\s)*[a-zA-Z]+$\"}\n                                                placeholder={this.state.formControls.image.placeholder}\n                                                value={image}\n                                                onChange={this.onImageChange.bind(this)}\n                                            />\n                                            <p className=\"error\">\n                                                Please enter valid URL\n                                            </p>\n                                        </div>\n\n\n                                    </div>\n\n                                </div>\n                            </div>\n                            <div className=\"form-group\">\n                                <button type=\"submit\" className=\"btn mt-30\" >  Submit </button>\n\n                            </div>\n                        </form>\n                    </div>\n                </div>\n\n            </div>\n\n        )\n    }\n\n}\n\nfunction mapStateToProps(state) {\n    const { data, dataWithId } = state.ImageReducer;\n    return { data, dataWithId }\n\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getData: get => dispatch(getData(get)),\n        getDataWithId: gett => dispatch(getDataWithId(gett)),\n        putData: put => dispatch(putData(put))\n    }\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(EditData));\n\n\n\n"]},"metadata":{},"sourceType":"module"}