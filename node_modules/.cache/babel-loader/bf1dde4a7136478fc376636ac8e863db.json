{"ast":null,"code":"import _objectSpread from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/src/pages/Form/BasicInfoForm.js\";\nimport React, { Component } from 'react';\nimport ReactTelInput from 'react-telephone-input';\nimport ReactTooltip from 'react-tooltip';\nimport 'react-telephone-input/lib/withStyles';\nimport './dist/style.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nvar BasicInfoForm = /*#__PURE__*/function (_Component) {\n  _inherits(BasicInfoForm, _Component);\n\n  var _super = _createSuper(BasicInfoForm);\n\n  function BasicInfoForm(props) {\n    var _this;\n\n    _classCallCheck(this, BasicInfoForm);\n\n    _this = _super.call(this, props);\n\n    _this.handleChange = function (date) {\n      _this.setState({\n        dob: date\n      });\n    };\n\n    _this.formSubmitHandler = function (e) {\n      e.preventDefault();\n      var formData = {};\n      var invalidElmsInput = document.querySelectorAll(\".form-group input:invalid\");\n      var invalidElmsEmailInput = document.querySelectorAll(\".form-group input[type=email]\");\n      var phoneNo = document.querySelector('input[type=\"tel\"]');\n\n      for (var i = 0; i < invalidElmsInput.length; i++) {\n        invalidElmsInput[i].parentElement.classList.add(\"has-error\");\n        invalidElmsEmailInput[i].parentElement.classList.add(\"has-error\");\n      } ////////Date of birth//////////\n\n\n      if (_this.state.dob === '') {\n        document.getElementById('dob').parentElement.parentElement.parentElement.classList.add('has-error');\n      } else {\n        document.getElementById('dob').parentElement.parentElement.parentElement.classList.remove('has-error');\n      } ///////////password/////////////\n\n\n      if (_this.state.formControls.password.value === '') {\n        document.getElementById('password').parentElement.parentElement.classList.add('has-error');\n      } else {\n        document.getElementById('password').parentElement.parentElement.classList.remove('has-error');\n      } ////////////confirm password/////////\n\n\n      if (_this.state.formControls.cpassword.value === '') {\n        document.getElementById('cpassword').parentElement.classList.add('has-error');\n      } else {\n        document.getElementById('cpassword').parentElement.classList.remove('has-error');\n      } //////////phone number//////\n\n\n      if (phoneNo.value.toString().length <= 3) {\n        phoneNo.parentElement.parentElement.classList.add('has-error');\n      } else {\n        phoneNo.parentElement.parentElement.classList.remove('has-error');\n      }\n\n      for (var formElementId in _this.state.formControls) {\n        formData[formElementId] = _this.state.formControls[formElementId].value;\n      }\n    };\n\n    _this.state = {\n      formControls: {\n        firstname: {\n          value: '',\n          placeholder: 'e.g. Sunder',\n          touched: false\n        },\n        lastname: {\n          value: '',\n          placeholder: 'e.g. Pichai',\n          touched: false\n        },\n        my_email: {\n          value: '',\n          placeholder: 'e.g. sunder.pichai@gmail.com',\n          touched: false\n        },\n        official_email: {\n          value: '',\n          placeholder: 'e.g. sunder.pichayi@gmail.com',\n          touched: false\n        },\n        sub_domain_email: {\n          value: '',\n          placeholder: 'e.g. sunder.pichayi@gmail.co.in',\n          touched: false\n        },\n        phoneno: {\n          value: '',\n          placeholder: 'Phone Number',\n          touched: false\n        },\n        gender: {\n          value: '',\n          touched: false,\n          validationRules: {\n            isRequired: true\n          },\n          options: [{\n            value: 'Chandigarh',\n            label: 'Chandigarh'\n          }, {\n            value: 'strawberry',\n            label: 'Himachal Pardesh'\n          }, {\n            value: 'vanilla',\n            label: 'Vanilla'\n          }]\n        },\n        states: {\n          value: '',\n          touched: false,\n          options: [{\n            value: 'punjab',\n            label: 'Punjab'\n          }, {\n            value: 'Himachal Pardesh',\n            label: 'Himachal Pardesh'\n          }, {\n            value: 'Uttrakhand',\n            label: 'Uttrakhand'\n          }, {\n            value: 'Gujrat',\n            label: 'Gujrat'\n          }]\n        },\n        password: {\n          value: '',\n          placeholder: 'Password',\n          touched: false\n        },\n        cpassword: {\n          value: '',\n          placeholder: 'Confirm Password',\n          touched: false\n        }\n      },\n      dob: \"\"\n    };\n    return _this;\n  } //on change for Date of Birth\n\n\n  _createClass(BasicInfoForm, [{\n    key: \"onNameChange\",\n    value: function onNameChange(event) {\n      var name = event.target.name;\n      var value = event.target.value;\n\n      if (event.target.checkValidity()) {\n        event.target.parentElement.classList.remove('has-error');\n      } else {\n        event.target.parentElement.classList.add('has-error');\n      }\n\n      var updatedControls = _objectSpread({}, this.state.formControls);\n\n      var updatedFormElement = _objectSpread({}, this.state.formControls[name]);\n\n      updatedFormElement.value = value.replace(/  +/g, ' ');\n      updatedControls[name] = updatedFormElement;\n      this.setState({\n        formControls: updatedControls\n      });\n    } //on submit function\n\n  }, {\n    key: \"onPhoneInputChange\",\n    //on change for phone nuber input\n    value: function onPhoneInputChange(telNumber, selectedCountry, e) {\n      var phoneNo = document.querySelector('input[type=\"tel\"]');\n      document.getElementById('digitCount').innerHTML = selectedCountry.format.length - 5;\n      phoneNo.setAttribute('maxlength', selectedCountry.format.length);\n\n      if (telNumber.length !== selectedCountry.format.length) {\n        // phone.setCustomValidity('Please enter the valid phone number.');\n        phoneNo.parentElement.parentElement.classList.add('has-error');\n      } else {\n        phoneNo.parentElement.parentElement.classList.remove('has-error');\n      }\n    } // onChange for email id's\n\n  }, {\n    key: \"onEmailChange\",\n    value: function onEmailChange(e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      if (e.target.checkValidity()) {\n        e.target.parentElement.classList.remove('has-error');\n      } else {\n        e.target.parentElement.classList.add('has-error');\n      }\n\n      var updatedControls = _objectSpread({}, this.state.formControls);\n\n      var updatedFormElement = _objectSpread({}, this.state.formControls[name]);\n\n      updatedFormElement.value = value.replace(/  +/g, ' ');\n      updatedControls[name] = updatedFormElement;\n      this.setState({\n        formControls: updatedControls\n      });\n    } //onChange for password and confirm password\n\n  }, {\n    key: \"handlePasswordChange\",\n    value: function handlePasswordChange(e) {\n      var name = e.target.name;\n      var value = e.target.value;\n\n      var updatedControls = _objectSpread({}, this.state.formControls);\n\n      var updatedFormElement = _objectSpread({}, this.state.formControls[name]);\n\n      updatedFormElement.value = value;\n      updatedControls[name] = updatedFormElement;\n      this.setState({\n        formControls: updatedControls\n      });\n\n      if (e.target.checkValidity()) {\n        e.target.parentElement.parentElement.classList.remove('has-error');\n\n        if (this.state.formControls.cpassword.value !== '') {\n          this.checkPassword();\n        }\n      } else {\n        e.target.parentElement.parentElement.classList.add('has-error');\n      }\n    } //function for change the type of password from password to text\n\n  }, {\n    key: \"changePasswordType\",\n    value: function changePasswordType() {\n      //to show and hide the password\n      var password = document.getElementsByName('password')[0];\n      var visibility = document.getElementsByClassName('password-outer');\n\n      if (password.type === 'password') {\n        password.setAttribute('type', 'text');\n        visibility[0].childNodes[1].style.display = 'none';\n        visibility[0].childNodes[2].style.display = 'block';\n      } else {\n        password.setAttribute('type', 'password');\n        visibility[0].childNodes[1].style.display = 'block';\n        visibility[0].childNodes[2].style.display = 'none';\n      }\n    } //comparing password and confirm password\n\n  }, {\n    key: \"checkPassword\",\n    value: function checkPassword() {\n      var password = document.getElementsByName('password'),\n          confirmPassword = document.getElementById('cpassword');\n\n      if (password === confirmPassword) {\n        document.getElementById('cpassword').parentElement.parentElement.classList.remove('has-error');\n        return true;\n      } else {\n        document.getElementById('cpassword').parentElement.parentElement.classList.add('has-error');\n        return false;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dashboard-content-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 13\n        }\n      }, \"Registration Form\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-8 col-md-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.formSubmitHandler.bind(this),\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-div\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-4 col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 49\n        }\n      }, \"First Name\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"req\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 66\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"firstname\",\n        className: \"form-ctrl\",\n        type: \"text\",\n        required: true,\n        minLength: 3,\n        maxLength: 40,\n        pattern: \"([a-zA-Z]\\.+\\\\s)*[a-zA-Z]+$\",\n        placeholder: this.state.formControls.firstname.placeholder,\n        value: this.state.formControls.firstname.value,\n        onChange: this.onNameChange.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 47\n        }\n      }, \"Only Alphabets are accepted. (Min 3 characters required)\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-4 col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 49\n        }\n      }, \"Last Name\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"req\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 65\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"lastname\",\n        type: \"text\",\n        required: true,\n        minLength: 3,\n        maxLength: 40,\n        className: \"form-ctrl\",\n        pattern: \"([a-zA-Z]\\.+\\\\s)*[a-zA-Z]+$\",\n        placeholder: this.state.formControls.lastname.placeholder,\n        value: this.state.formControls.lastname.value,\n        onChange: this.onNameChange.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 49\n        }\n      }, \"Only Alphabets are accepted. (Min 3 characters required)\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-4 col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 49\n        }\n      }, \"Date of Birth\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"req\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 69\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(DatePicker, {\n        selected: this.state.dob,\n        onChange: this.handleChange.bind(this),\n        selectsStart: true,\n        id: \"dob\",\n        className: \"form-ctrl\",\n        placeholderText: \"Date of Birth\",\n        dateFormat: \"dd-M-yyyy\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 46\n        }\n      }, \"Please enter your Date of Birth.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-4 col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 49\n        }\n      }, \"Phone Number\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"req\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 68\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(ReactTelInput, {\n        flagsImagePath: require('../../static/images/flags.png'),\n        preferredCountries: ['us', 'in', 'gb'],\n        defaultCountry: \"in\",\n        onChange: this.onPhoneInputChange.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 46\n        }\n      }, \"Please enter a valid phone number. Max \", /*#__PURE__*/React.createElement(\"p\", {\n        style: {\n          display: \"inline\"\n        },\n        id: \"digitCount\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 92\n        }\n      }), \" digits allowed\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 49\n        }\n      }, \"Email Address\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"req\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 69\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"my_email\",\n        type: \"email\",\n        placeholder: this.state.formControls.my_email.placeholder,\n        value: this.state.formControls.my_email.value,\n        onChange: this.onEmailChange.bind(this),\n        pattern: \"^(([-\\\\w\\\\d]+)(\\\\.[-\\\\w\\\\d]+)*@([-\\\\w\\\\d]+)((\\\\.[-\\\\w\\\\d]{2,3})))$\",\n        className: \"form-ctrl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 49\n        }\n      }, \"Please enter a valid email id.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 49\n        }\n      }, \"Official Email Address\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"req\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 78\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"official_email\",\n        type: \"email\",\n        placeholder: this.state.formControls.official_email.placeholder,\n        value: this.state.formControls.official_email.value,\n        onChange: this.onEmailChange.bind(this),\n        pattern: \"^([-\\\\w\\\\d]+)(\\\\.[-\\\\w\\\\d]+)*@((?!gmail.)(?!yahoo.)(?!ymail.)(?!hotmail.)[-\\\\w\\\\d]+)(\\\\.[-\\\\w\\\\d]{2,})$\",\n        className: \"form-ctrl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 49\n        }\n      }, \"Please enter a valid official email id.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 49\n        }\n      }, \"Official Email Address(with two subdomain)\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"req\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 98\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"sub_domain_email\",\n        type: \"email\",\n        placeholder: this.state.formControls.sub_domain_email.placeholder,\n        value: this.state.formControls.sub_domain_email.value,\n        onChange: this.onEmailChange.bind(this),\n        pattern: \"^(([-\\\\w\\\\d]+)(\\\\.[-\\\\w\\\\d]+)*@([-\\\\w\\\\d]+)((\\\\.[-\\\\w\\\\d]{2,3}){1,2}))$\",\n        className: \"form-ctrl\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 49\n        }\n      }, \"Please enter a valid email id.\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-4 col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 45\n        }\n      }, \"Password\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"req\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 60\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"password-outer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        outerClass: \"input-ctrl\",\n        minLength: 6,\n        required: true,\n        onChange: this.handlePasswordChange.bind(this),\n        autocomplete: \"off\",\n        placeholder: \"Password\",\n        id: \"password\",\n        className: \"form-ctrl\",\n        value: this.state.formControls.password.value,\n        pattern: \"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 45\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons\",\n        \"data-tip\": true,\n        \"data-for\": \"visibility_off\",\n        onClick: this.changePasswordType.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 45\n        }\n      }, \"visibility_off\"), /*#__PURE__*/React.createElement(\"i\", {\n        className: \"material-icons\",\n        \"data-tip\": true,\n        \"data-for\": \"visibility_on\",\n        onClick: this.changePasswordType.bind(this),\n        style: {\n          display: 'none'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 45\n        }\n      }, \"visibility\"), /*#__PURE__*/React.createElement(ReactTooltip, {\n        id: \"visibility_off\",\n        type: \"dark\",\n        place: \"top\",\n        effect: \"solid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 46\n        }\n      }, \"Show Password\"), /*#__PURE__*/React.createElement(ReactTooltip, {\n        id: \"visibility_on\",\n        type: \"dark\",\n        place: \"top\",\n        effect: \"solid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 46\n        }\n      }, \"Hide Password\"), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        style: {\n          color: \"unset\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 45\n        }\n      }, \"Enter your password (\", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"\".concat(this.state.formControls.password.value.length >= 8 ? \"green\" : \"#f03030\")\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 62\n        }\n      }, \"Min 8 char.\"), \", \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"\".concat(this.state.formControls.password.value.match(\"(?=.*?[A-Z])\") ? \"#279627\" : \"#f03030\")\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 171\n        }\n      }, \"at least one uppercase letter\"), \", \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"\".concat(this.state.formControls.password.value.match(\"(?=.*?[a-z])\") ? \"#279627\" : \"#f03030\")\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 201\n        }\n      }, \"one lowercase letter\"), \", \", /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"\".concat(this.state.formControls.password.value.match(\"(?=.*?[0-9])\") ? \"#279627\" : \"#f03030\")\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 192\n        }\n      }, \"one number and \"), /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          color: \"\".concat(this.state.formControls.password.value.match(\"(?=.*?[#?!@$%^&*-])\") ? \"#279627\" : \"#f03030\")\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 52\n        }\n      }, \"one special character required\"), \").\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-sm-4 col-md-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 49\n        }\n      }, \"Confirm Password\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"req\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 72\n        }\n      }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n        name: \"cpassword\",\n        id: \"cpassword\",\n        type: \"password\",\n        className: \"form-ctrl\",\n        placeholder: this.state.formControls.cpassword.placeholder,\n        value: this.state.formControls.cpassword.value,\n        onChange: this.handlePasswordChange.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"error\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 49\n        }\n      }, \"Password doesn't match.\"))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn mt-30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 29\n        }\n      }, \"  Submit \"))))));\n    }\n  }]);\n\n  return BasicInfoForm;\n}(Component);\n\nexport default BasicInfoForm;","map":{"version":3,"sources":["/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/src/pages/Form/BasicInfoForm.js"],"names":["React","Component","ReactTelInput","ReactTooltip","DatePicker","BasicInfoForm","props","handleChange","date","setState","dob","formSubmitHandler","e","preventDefault","formData","invalidElmsInput","document","querySelectorAll","invalidElmsEmailInput","phoneNo","querySelector","i","length","parentElement","classList","add","state","getElementById","remove","formControls","password","value","cpassword","toString","formElementId","firstname","placeholder","touched","lastname","my_email","official_email","sub_domain_email","phoneno","gender","validationRules","isRequired","options","label","states","event","name","target","checkValidity","updatedControls","updatedFormElement","replace","telNumber","selectedCountry","innerHTML","format","setAttribute","checkPassword","getElementsByName","visibility","getElementsByClassName","type","childNodes","style","display","confirmPassword","bind","onNameChange","require","onPhoneInputChange","onEmailChange","handlePasswordChange","changePasswordType","color","match"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactTelInput from 'react-telephone-input';\nimport ReactTooltip from 'react-tooltip';\nimport 'react-telephone-input/lib/withStyles';\nimport './dist/style.css'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass BasicInfoForm extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formControls: {\n        firstname: {\n          value: '',\n          placeholder: 'e.g. Sunder',\n          touched: false\n        },\n        lastname: {\n            value: '',\n            placeholder: 'e.g. Pichai',\n            touched: false\n          },\n        \n        my_email: {\n          value: '',\n          placeholder: 'e.g. sunder.pichai@gmail.com',\n          touched: false\n        },\n        official_email: {\n          value: '',\n          placeholder: 'e.g. sunder.pichayi@gmail.com',\n          touched: false\n        },\n        sub_domain_email: {\n          value: '',\n          placeholder: 'e.g. sunder.pichayi@gmail.co.in',\n          touched: false\n        },\n        phoneno: {\n            value: '',\n            placeholder: 'Phone Number',\n            touched: false\n          },\n        gender: {\n          value: '',\n          \n          touched: false,\n          validationRules: {\n            isRequired: true,\n          },\n          options: [\n            { value: 'Chandigarh', label: 'Chandigarh' },\n            { value: 'strawberry', label: 'Himachal Pardesh' },\n            { value: 'vanilla', label: 'Vanilla' },\n          ]\n        },\n        states: {\n          value: '',\n          \n          touched: false,\n         \n          options: [\n            { value: 'punjab', label: 'Punjab' },\n            { value: 'Himachal Pardesh', label: 'Himachal Pardesh' },\n            { value: 'Uttrakhand', label: 'Uttrakhand' },\n            { value: 'Gujrat', label: 'Gujrat' }\n          ]\n        },\n        password: {\n            value: '',\n            placeholder: 'Password',\n            touched: false\n          },\n        cpassword: {\n            value: '',\n            placeholder: 'Confirm Password',\n            touched: false\n          },\n      },\n      dob: \"\"\n    }\n  }\n  //on change for Date of Birth\n  handleChange = date => {\n    this.setState({\n      dob: date\n    });\n  };\n  \n  onNameChange(event) {\n    const name = event.target.name;\n    const value = event.target.value;\n    \n    if(event.target.checkValidity()){\n        event.target.parentElement.classList.remove('has-error');\n    }else{\n        event.target.parentElement.classList.add('has-error');\n    }\n    const updatedControls = {\n      ...this.state.formControls\n    };\n    const updatedFormElement = {\n      ...this.state.formControls[name]\n    };\n    updatedFormElement.value = value.replace(/  +/g, ' ');\n\n    updatedControls[name] = updatedFormElement;\n    this.setState({\n      formControls: updatedControls,\n    });\n  }\n\n  //on submit function\n  formSubmitHandler = (e) => {\n    e.preventDefault()\n    const formData = {};\n    const invalidElmsInput = document.querySelectorAll(\".form-group input:invalid\");\n    const invalidElmsEmailInput = document.querySelectorAll(\".form-group input[type=email]\");\n    let phoneNo = document.querySelector('input[type=\"tel\"]')\n    for (let i = 0; i < invalidElmsInput.length; i++) {\n        invalidElmsInput[i].parentElement.classList.add(\"has-error\")\n        invalidElmsEmailInput[i].parentElement.classList.add(\"has-error\")\n    }\n    ////////Date of birth//////////\n    if(this.state.dob ===''){\n      document.getElementById('dob').parentElement.parentElement.parentElement.classList.add('has-error')\n    }\n    else{\n      document.getElementById('dob').parentElement.parentElement.parentElement.classList.remove('has-error')\n    }\n    ///////////password/////////////\n    if(this.state.formControls.password.value === '' ){\n      document.getElementById('password').parentElement.parentElement.classList.add('has-error')\n    }else{\n      document.getElementById('password').parentElement.parentElement.classList.remove('has-error')\n    }\n    ////////////confirm password/////////\n    if(this.state.formControls.cpassword.value === '' ){\n      document.getElementById('cpassword').parentElement.classList.add('has-error')\n    }else{\n      document.getElementById('cpassword').parentElement.classList.remove('has-error')\n    }\n    //////////phone number//////\n    if(phoneNo.value.toString().length <= 3)\n    {\n      phoneNo.parentElement.parentElement.classList.add('has-error')\n    }else{\n      phoneNo.parentElement.parentElement.classList.remove('has-error')\n    }\n    for (let formElementId in this.state.formControls) {\n          formData[formElementId] = this.state.formControls[formElementId].value;\n    }\n  }\n\n  //on change for phone nuber input\n  onPhoneInputChange(telNumber, selectedCountry, e){\n    let phoneNo = document.querySelector('input[type=\"tel\"]')\n    document.getElementById('digitCount').innerHTML = selectedCountry.format.length -5\n    phoneNo.setAttribute('maxlength', selectedCountry.format.length);\n    if(telNumber.length !== selectedCountry.format.length){\n      // phone.setCustomValidity('Please enter the valid phone number.');\n      phoneNo.parentElement.parentElement.classList.add('has-error');\n      }else{\n          phoneNo.parentElement.parentElement.classList.remove('has-error');\n      }\n  }\n  // onChange for email id's\n  onEmailChange(e){\n    const name = e.target.name;\n    const value = e.target.value;\n    if(e.target.checkValidity()){\n      e.target.parentElement.classList.remove('has-error');\n    }else{\n      e.target.parentElement.classList.add('has-error');\n    }\n    const updatedControls = {\n      ...this.state.formControls\n    };\n    const updatedFormElement = {\n      ...this.state.formControls[name]\n    };\n    updatedFormElement.value = value.replace(/  +/g, ' ');\n\n    updatedControls[name] = updatedFormElement;\n    this.setState({\n      formControls: updatedControls,\n    });\n  }\n\n  //onChange for password and confirm password\n  handlePasswordChange(e){\n    const name = e.target.name;\n    const value = e.target.value;\n    const updatedControls = {\n      ...this.state.formControls\n    };\n    const updatedFormElement = {\n      ...this.state.formControls[name]\n    };\n    updatedFormElement.value = value;\n\n    updatedControls[name] = updatedFormElement;\n    this.setState({\n      formControls: updatedControls,\n    });\n    if(e.target.checkValidity()){\n        e.target.parentElement.parentElement.classList.remove('has-error');\n            if(this.state.formControls.cpassword.value !== ''){\n              this.checkPassword();\n            }\n    }\n    else{ \n        e.target.parentElement.parentElement.classList.add('has-error');\n    }\n  }\n\n  //function for change the type of password from password to text\n  changePasswordType() {\n    //to show and hide the password\n    const password = document.getElementsByName('password')[0];\n    const visibility = document.getElementsByClassName('password-outer');\n    if (password.type === 'password') {\n        password.setAttribute('type', 'text');\n        visibility[0].childNodes[1].style.display = 'none';\n        visibility[0].childNodes[2].style.display = 'block';\n    } else {\n        password.setAttribute('type', 'password');\n        visibility[0].childNodes[1].style.display = 'block';\n        visibility[0].childNodes[2].style.display = 'none';\n    }\n  }\n\n  //comparing password and confirm password\n  checkPassword(){\n    const password = document.getElementsByName('password'),\n        confirmPassword = document.getElementById('cpassword');\n    if(password === confirmPassword ){\n      document.getElementById('cpassword').parentElement.parentElement.classList.remove('has-error');\n        return true\n    }\n    else{\n      document.getElementById('cpassword').parentElement.parentElement.classList.add('has-error');\n        return false\n    }\n  } \n  render() {\n    return (\n        <div className=\"dashboard-content-container\">\n            <h2>Registration Form</h2>\n            <div className=\"row\">\n\n                <div className=\"col-8 col-md-8\">\n                \n                <form onSubmit={this.formSubmitHandler.bind(this)} noValidate={true}>\n                <div className=\"form-div\">\n                \n                                    <div className=\"row\">\n                                        <div className=\"col-sm-4 col-md-4\">\n                                            <div className=\"form-group\">\n                                                <label>First Name<span className=\"req\">*</span></label>\n                                                <input name=\"firstname\" \n                                                       className=\"form-ctrl\"\n                                                           type=\"text\"\n                                                           required={true}\n                                                           minLength={3}\n                                                           maxLength={40}\n                                                           pattern={\"([a-zA-Z]\\.+\\\\s)*[a-zA-Z]+$\"}\n                                                           placeholder={this.state.formControls.firstname.placeholder}\n                                                           value={this.state.formControls.firstname.value}\n                                                           onChange={this.onNameChange.bind(this)}\n                                                />\n                                              <p className=\"error\">\n                                                    Only Alphabets are accepted.\n                                                    (Min 3 characters required)\n                                            </p>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-sm-4 col-md-4\">\n                                            <div className=\"form-group\">\n                                                <label>Last Name<span className=\"req\">*</span></label>\n                                                <input name=\"lastname\"  type=\"text\"\n                                                            required={true}\n                                                            minLength={3}\n                                                            maxLength={40}\n                                                            className=\"form-ctrl\"\n                                                            pattern={\"([a-zA-Z]\\.+\\\\s)*[a-zA-Z]+$\"}\n                                                            placeholder={this.state.formControls.lastname.placeholder}\n                                                            value={this.state.formControls.lastname.value}\n                                                            onChange={this.onNameChange.bind(this)}\n                                                            \n                                                />\n                                                <p className=\"error\">\n                                                    Only Alphabets are accepted.\n                                                    (Min 3 characters required)\n                                                </p>\n                                            </div>\n                                           \n                                        </div>\n                                       \n                                        <div className=\"col-sm-4 col-md-4\">\n                                            <div className=\"form-group\">\n                                                <label>Date of Birth<span className=\"req\">*</span></label>\n                                                 \n                                                    <DatePicker\n                                                      selected={this.state.dob}\n                                                      onChange={this.handleChange.bind(this)}\n                                                      selectsStart\n                                                      id=\"dob\"\n                                                      className=\"form-ctrl\"\n                                                      placeholderText=\"Date of Birth\"\n                                                      dateFormat=\"dd-M-yyyy\"\n                                                    />\n                                             <p className=\"error\">\n                                                    Please enter your Date of Birth.\n                                            </p>\n                                            </div> \n                                        </div>\n                                        <div className=\"col-sm-4 col-md-4\">\n                                            <div className=\"form-group\">\n                                      \n                                                <label>Phone Number<span className=\"req\">*</span></label>\n                                                <ReactTelInput\n                                                         flagsImagePath={require('../../static/images/flags.png')}\n                                                         preferredCountries={['us', 'in', 'gb']}\n                                                         defaultCountry={\"in\"}\n                                                         onChange={this.onPhoneInputChange.bind(this)}\n                                                    />\n                                             <p className=\"error\">\n                                                    Please enter a valid phone number. Max <p style ={{display:\"inline\"}} id=\"digitCount\"></p> digits allowed\n                                            </p>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-sm-8\">\n                                            <div className=\"form-group\">\n                                                <label>Email Address<span className=\"req\">*</span></label>\n                                                <input name=\"my_email\" type=\"email\"\n                                                            placeholder={this.state.formControls.my_email.placeholder}\n                                                            value={this.state.formControls.my_email.value}\n                                                            onChange={this.onEmailChange.bind(this)}\n                                                            pattern=\"^(([-\\w\\d]+)(\\.[-\\w\\d]+)*@([-\\w\\d]+)((\\.[-\\w\\d]{2,3})))$\"\n                                                            className=\"form-ctrl\"\n                                                />\n                                                <p className=\"error\">\n                                                    Please enter a valid email id.\n                                                </p>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-sm-8\">\n                                            <div className=\"form-group\">\n                                                <label>Official Email Address<span className=\"req\">*</span></label>\n                                                <input name=\"official_email\" type=\"email\"\n                                                            placeholder={this.state.formControls.official_email.placeholder}\n                                                            value={this.state.formControls.official_email.value}\n                                                            onChange={this.onEmailChange.bind(this)}\n                                                            pattern=\"^([-\\w\\d]+)(\\.[-\\w\\d]+)*@((?!gmail.)(?!yahoo.)(?!ymail.)(?!hotmail.)[-\\w\\d]+)(\\.[-\\w\\d]{2,})$\"\n                                                            className=\"form-ctrl\"\n                                                />\n                                                <p className=\"error\">\n                                                    Please enter a valid official email id.\n                                                </p>\n                                            </div>\n                                            \n                                        </div>\n                                        <div className=\"col-sm-8\">\n                                            <div className=\"form-group\">\n                                                <label>Official Email Address(with two subdomain)<span className=\"req\">*</span></label>\n                                                <input name=\"sub_domain_email\" type=\"email\"\n                                                            placeholder={this.state.formControls.sub_domain_email.placeholder}\n                                                            value={this.state.formControls.sub_domain_email.value}\n                                                            onChange={this.onEmailChange.bind(this)}\n                                                            pattern=\"^(([-\\w\\d]+)(\\.[-\\w\\d]+)*@([-\\w\\d]+)((\\.[-\\w\\d]{2,3}){1,2}))$\"\n                                                            className=\"form-ctrl\"\n                                                />\n                                                <p className=\"error\">\n                                                    Please enter a valid email id.\n                                                </p>\n                                            </div>\n                                        </div>\n                                        <div className=\"col-sm-4 col-md-4\">\n                                        \n                                            <div className=\"form-group\" >\n                                            <label>Password<span className=\"req\">*</span></label>\n                                            <div className=\"password-outer\">\n                                            <input type=\"password\"\n                                                       name=\"password\"\n                                                       outerClass=\"input-ctrl\"\n                                                       minLength={6}\n                                                       required={true}\n                                                       onChange={this.handlePasswordChange.bind(this)}\n                                                       autocomplete=\"off\"\n                                                       placeholder=\"Password\"\n                                                       id=\"password\"\n                                                       className=\"form-ctrl\"\n                                                       value={this.state.formControls.password.value}\n                                                       pattern={\"^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9])(?=.*?[#?!@$%^&*-]).{8,}$\"}\n                                            />\n                                            <i className=\"material-icons\"  data-tip data-for={\"visibility_off\"}\n                                               onClick={this.changePasswordType.bind(this)}>visibility_off</i>\n                                            <i className=\"material-icons\" data-tip data-for={\"visibility_on\"} onClick={this.changePasswordType.bind(this)}\n                                               style={{display: 'none'}}>visibility</i>\n                                             <ReactTooltip id={\"visibility_off\"} type=\"dark\" place=\"top\" effect='solid'>\n                                                 Show Password\n                                             </ReactTooltip>\n                                             <ReactTooltip id={\"visibility_on\"} type=\"dark\" place=\"top\" effect='solid'>\n                                                 Hide Password\n                                             </ReactTooltip>\n                                            <p className=\"error\" style={{color: \"unset\"}}>Enter your\n                                                   password (<span\n                                                       style={{color: `${this.state.formControls.password.value.length >= 8 ? \"green\" : \"#f03030\"}`}}>Min 8 char.</span>, <span\n                                                       style={{color: `${this.state.formControls.password.value.match(\"(?=.*?[A-Z])\") ? \"#279627\" : \"#f03030\"}`}}>at least one uppercase letter</span>, <span\n                                                       style={{color: `${this.state.formControls.password.value.match(\"(?=.*?[a-z])\") ? \"#279627\" : \"#f03030\"}`}}>one lowercase letter</span>, <span\n                                                       style={{color: `${this.state.formControls.password.value.match(\"(?=.*?[0-9])\") ? \"#279627\" : \"#f03030\"}`}}>one number and </span>\n                                                   <span\n                                                       style={{color: `${this.state.formControls.password.value.match(\"(?=.*?[#?!@$%^&*-])\") ? \"#279627\" : \"#f03030\"}`}}>one special character required</span>).\n                                              </p>\n                                        </div>\n                                        </div>\n                                        </div>\n                                        <div className=\"col-sm-4 col-md-4\">\n                                            <div className=\"form-group\">\n                                             \n                                                <label>Confirm Password<span className=\"req\">*</span></label>\n                                                <input name=\"cpassword\" id=\"cpassword\"  type=\"password\"\n                                                            className=\"form-ctrl\"\n                                                            placeholder={this.state.formControls.cpassword.placeholder}\n                                                            value={this.state.formControls.cpassword.value}\n                                                            onChange={this.handlePasswordChange.bind(this)}\n                                                />\n                                                <p className=\"error\">Password doesn't match.</p>\n                                            </div>\n                                        </div>\n                                      \n                                    </div>\n                            </div>\n                            <div className=\"form-group\">\n                            <button type=\"submit\" className=\"btn mt-30\">  Submit </button>\n                            \n                </div>\n                </form>\n                </div>\n            </div>\n      </div>\n    );\n\n  }\n}\n\nexport default BasicInfoForm;\n"]},"metadata":{},"sourceType":"module"}