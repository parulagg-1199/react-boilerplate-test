{"ast":null,"code":"/* \n*   This reducer is used when we have implemented auth i.e. user login form\n*    This is used along with PrivateRoute\n*/\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE } from '../constants/loginConstants';\nvar initialState = {\n  auth: {\n    isAuthenticated: localStorage.getItem(\"token\") ? true : false\n  }\n};\nexport default function LoginReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN_REQUEST:\n      return Object.assign({}, state, {\n        loginPageLoading: true\n      });\n\n    case LOGIN_SUCCESS:\n      if (action.response.data.error) {\n        return Object.assign({}, state, {\n          loginPageLoading: false,\n          message: action.response.data.message,\n          status: action.response.status,\n          error: true\n        });\n      } else {\n        if (!!action.response.data.token && !!action.response.data.expire && !!action.response.data.sys_role) {\n          localStorage.setItem(\"name\", !!action.response.data.name ? action.response.data.name : \"\");\n          localStorage.setItem(\"token\", action.response.data.token);\n          localStorage.setItem(\"expire\", action.response.data.expire);\n          localStorage.setItem(\"sys_role\", action.response.data.sys_role);\n          return Object.assign({}, state, {\n            loginPageLoading: false,\n            auth: {\n              isAuthenticated: true,\n              sys_role: action.response.data.sys_role\n            },\n            status: 200,\n            loginForm: {\n              email: \"\",\n              password: \"\"\n            },\n            error: false\n          });\n        } else {\n          return Object.assign({}, state, {\n            loginPageLoading: false,\n            auth: {\n              isAuthenticated: false,\n              sys_role: \"\"\n            },\n            status: 200,\n            loginForm: {\n              email: \"\",\n              password: \"\"\n            },\n            error: false\n          });\n        }\n      }\n\n    case LOGIN_FAILURE:\n      return Object.assign({}, state, {\n        loginPageLoading: false,\n        message: action.response.data.message,\n        status: action.response.status,\n        error: true\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/src/common/reducers/loginReducer.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","initialState","auth","isAuthenticated","localStorage","getItem","LoginReducer","state","action","type","Object","assign","loginPageLoading","response","data","error","message","status","token","expire","sys_role","setItem","name","loginForm","email","password"],"mappings":"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","sourcesContent":["/* \n*   This reducer is used when we have implemented auth i.e. user login form\n*    This is used along with PrivateRoute\n*/\n\nimport {\n    LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE,\n} from '../constants/loginConstants';\n\nconst initialState = {\n    auth: {\n        isAuthenticated: localStorage.getItem(\"token\") ? true : false\n\n    },\n};\nexport default function LoginReducer(state = initialState, action) {\n    switch (action.type) {\n        case LOGIN_REQUEST:\n            return Object.assign({}, state, {\n                loginPageLoading: true\n            });\n        case LOGIN_SUCCESS:\n            if (action.response.data.error) {\n                return Object.assign({}, state, {\n                    loginPageLoading: false,\n                    message: action.response.data.message,\n                    status: action.response.status,\n                    error: true\n                });\n            }\n            else {\n                if (!!action.response.data.token && !!action.response.data.expire && !!action.response.data.sys_role) {\n                    localStorage.setItem(\"name\", !!action.response.data.name ? action.response.data.name : \"\");\n                    localStorage.setItem(\"token\", action.response.data.token);\n                    localStorage.setItem(\"expire\", action.response.data.expire);\n                    localStorage.setItem(\"sys_role\", action.response.data.sys_role);\n                    return Object.assign({}, state, {\n                        loginPageLoading: false,\n                        auth: {\n                            isAuthenticated: true,\n                            sys_role: action.response.data.sys_role\n                        },\n                        status: 200,\n                        loginForm: {email: \"\", password: \"\"},\n                        error: false\n                    });\n                }\n                else {\n                    return Object.assign({}, state, {\n                        loginPageLoading: false,\n                        auth: {\n                            isAuthenticated: false,\n                            sys_role: \"\"\n                        },\n                        status: 200,\n                        loginForm: {email: \"\", password: \"\"},\n                        error: false\n                    });\n                }\n            }\n        case LOGIN_FAILURE:\n            return Object.assign({}, state, {\n                loginPageLoading: false,\n                message: action.response.data.message,\n                status: action.response.status,\n                error: true\n            });\n\n        default:\n            return state\n    }\n}\n"]},"metadata":{},"sourceType":"module"}