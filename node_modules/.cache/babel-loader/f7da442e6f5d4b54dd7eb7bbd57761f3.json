{"ast":null,"code":"import _regeneratorRuntime from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/src/component/inputField/input.js\";\nimport React, { Component } from 'react';\nimport AsyncSelect from 'react-select/async';\nimport makeAnimated from 'react-select/animated';\nvar styles = {\n  color: 'blue'\n};\nvar animatedComponenet = makeAnimated();\n\nvar Input = /*#__PURE__*/function (_Component) {\n  _inherits(Input, _Component);\n\n  var _super = _createSuper(Input);\n\n  function Input() {\n    var _this;\n\n    _classCallCheck(this, Input);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      selected: []\n    };\n\n    _this.onChange = function (selected) {\n      _this.setState({\n        selected: selected\n      });\n    };\n\n    _this.loadOptions = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputText, callback) {\n        var response, json;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://localhost:3333/users?name_like=\".concat(inputText));\n\n              case 2:\n                response = _context.sent;\n                _context.next = 5;\n                return response.json();\n\n              case 5:\n                json = _context.sent;\n                callback(json.map(function (i) {\n                  return {\n                    label: i.name,\n                    value: i.id\n                  };\n                }));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(Input, [{\n    key: \"render\",\n    value: function render() {\n      var selected = this.state.selected;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"users\",\n        style: {\n          width: '50%',\n          marginLeft: \"25%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(AsyncSelect, {\n        isMulti: true,\n        components: animatedComponenet,\n        value: selected,\n        onChange: this.onChange,\n        placeholder: 'search for names...',\n        loadOptions: this.loadOptions,\n        style: styles.select,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }));\n    }\n  }]);\n\n  return Input;\n}(Component);\n\nexport { Input as default };","map":{"version":3,"sources":["/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/src/component/inputField/input.js"],"names":["React","Component","AsyncSelect","makeAnimated","styles","color","animatedComponenet","Input","state","selected","onChange","setState","loadOptions","inputText","callback","fetch","response","json","map","i","label","name","value","id","width","marginLeft","select"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AAEA,IAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE;AADI,CAAf;AAGA,IAAMC,kBAAkB,GAAGH,YAAY,EAAvC;;IACqBI,K;;;;;;;;;;;;;;;UACjBC,K,GAAM;AACFC,MAAAA,QAAQ,EAAC;AADP,K;;UAINC,Q,GAAS,UAAAD,QAAQ,EAAE;AACf,YAAKE,QAAL,CAAc;AACVF,QAAAA,QAAQ,EAAEA;AADA,OAAd;AAGH,K;;UAGDG,W;0EAAY,iBAAOC,SAAP,EAAkBC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACeC,KAAK,iDAA0CF,SAA1C,EADpB;;AAAA;AACFG,gBAAAA,QADE;AAAA;AAAA,uBAESA,QAAQ,CAACC,IAAT,EAFT;;AAAA;AAEFA,gBAAAA,IAFE;AAIRH,gBAAAA,QAAQ,CAACG,IAAI,CAACC,GAAL,CAAS,UAAAC,CAAC;AAAA,yBAAG;AAACC,oBAAAA,KAAK,EAACD,CAAC,CAACE,IAAT;AAAcC,oBAAAA,KAAK,EAAEH,CAAC,CAACI;AAAvB,mBAAH;AAAA,iBAAV,CAAD,CAAR;;AAJQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAOH;AAAA,UACCd,QADD,GACW,KAAKD,KADhB,CACCC,QADD;AAEL,0BACI;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,KAAK,EAAE;AAACe,UAAAA,KAAK,EAAC,KAAP;AAAcC,UAAAA,UAAU,EAAC;AAAzB,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,WAAD;AACA,QAAA,OAAO,MADP;AAEA,QAAA,UAAU,EAAEnB,kBAFZ;AAGA,QAAA,KAAK,EAAEG,QAHP;AAIA,QAAA,QAAQ,EAAE,KAAKC,QAJf;AAKA,QAAA,WAAW,EAAE,qBALb;AAMA,QAAA,WAAW,EAAE,KAAKE,WANlB;AAOA,QAAA,KAAK,EAAER,MAAM,CAACsB,MAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAaH;;;;EAlC8BzB,S;;SAAdM,K","sourcesContent":["import React, { Component } from 'react'\nimport AsyncSelect from 'react-select/async';\nimport makeAnimated from 'react-select/animated'\n \nconst styles = {\n    color: 'blue',\n  }\nconst animatedComponenet = makeAnimated()\nexport default class Input extends Component {\n    state={\n        selected:[]\n    }\n\n    onChange=selected=>{\n        this.setState({\n            selected: selected \n        })\n    }\n\n    //matching anywhere\n    loadOptions=async (inputText, callback)=>{\n        const response = await fetch(`http://localhost:3333/users?name_like=${inputText}`);\n        const json=await response.json();\n\n        callback(json.map(i=>({label:i.name,value: i.id})))\n    }\n    \n    render() {\n        const{selected}=this.state\n        return (\n            <div className='users' style={{width:'50%', marginLeft:\"25%\"}}>\n                <AsyncSelect\n                isMulti\n                components={animatedComponenet}\n                value={selected}\n                onChange={this.onChange}\n                placeholder={'search for names...'}\n                loadOptions={this.loadOptions}\n                style={styles.select}\n                />                \n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}