{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.negate = negate;\nexports.printIt = printIt;\nexports.first = first;\nexports.tail = tail;\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar curry = exports.curry = function curry(fn) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return fn.length > args.length ? curry(fn.bind.apply(fn, [null].concat(args))) : fn.apply(undefined, args);\n  };\n};\n\nvar assoc = exports.assoc = curry(function (key, val, obj) {\n  return _extends({}, obj, _defineProperty({}, key, val));\n});\nvar assocPath = exports.assocPath = curry(function (keyPath, val, obj) {\n  if (keyPath.length === 0) {\n    return val;\n  }\n\n  if (keyPath.length === 1) {\n    return assoc(keyPath[0], val, obj);\n  } else {\n    return _extends({}, obj, _defineProperty({}, keyPath[0], assocPath(keyPath.slice(1), val, obj[keyPath[0]])));\n  }\n}); // concatenate two arrays\n// if set1 = [2, 4, 5] and set2 = [6, 0] then concat(set1, set2) = [2, 4, 5, 6, 0]\n\nvar concat = exports.concat = curry(function (set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx = 0;\n  var result = [];\n\n  while (idx < set1.length) {\n    result[result.length] = set1[idx++];\n  }\n\n  idx = 0;\n\n  while (idx < set2.length) {\n    result[result.length] = set2[idx++];\n  }\n\n  return result;\n});\n/**\n * given an object and a property name, returns the value of that property in the object\n * super complicated :)\n * but get really useful as a curried function\n */\n\nvar prop = exports.prop = curry(function (prop, obj) {\n  return obj[prop];\n});\n/**\n * given a property name and a value, check if the property in the object equals the given value\n * e.g. propEq('id', 1, {id: 1, name: 'mukesh'}) === true\n * e.g. propEq('id', 2, {id: 1, name: 'mukesh'}) === false\n */\n\nvar propEq = exports.propEq = curry(function (prop, val, obj) {\n  return equals(val, obj[prop]);\n});\n/**\n * Tells whether the two objects have same value for a property\n * E.g. p1 = {fname: 'rustom', lname: 'yadav'}; p2 = { fname: 'kuldev', lname: 'yadav'}\n * then eqProps('lname', p1, p2) === true\n * but eqProps('fname', p1, p2) === false\n */\n\nvar eqProps = exports.eqProps = curry(function (prop, o1, o2) {\n  return equals(o1[prop], o2[prop]);\n});\n/**\n * In a given list, update the value at a particular index\n * E.g. update(10, 2, [0,1,2,3,4]) === [0,1,10,3,4]\n */\n\nvar update = exports.update = curry(function (index, val, arr) {\n  if (index >= 0 && index < arr.length) {\n    return [].concat(_toConsumableArray(arr.slice(0, index)), [val], _toConsumableArray(arr.slice(index + 1)));\n  } else {\n    return arr;\n  }\n});\n/**\n * find a value inside a list/array and replace with a given value\n */\n\nvar findAndUpdate = exports.findAndUpdate = curry(function (findFn, val, arr) {\n  var index = arr.findIndex(findFn);\n\n  if (index >= 0) {\n    return update(index, val, arr);\n  } else {\n    return arr;\n  }\n}); // prepend an element to an array\n// e.g. prepend(4, [0, 1]) = [4, 0, 1]\n\nvar prepend = exports.prepend = curry(function (el, arr) {\n  return concat([el], arr);\n}); // append an element to end of an array\n// e.g. append(4, [0, 1]) = [0, 1, 4]\n\nvar append = exports.append = curry(function (el, arr) {\n  return concat(arr, [el]);\n});\n\nvar pipe = exports.pipe = function pipe() {\n  for (var _len2 = arguments.length, fns = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function () {\n    return fns.reduce(function (acc, fn) {\n      return [fn.apply(null, acc)];\n    }, arguments)[0];\n  };\n};\n\nfunction negate(fn, context) {\n  return function () {\n    return !fn.apply(context, arguments);\n  };\n}\n\nvar dedupe = exports.dedupe = curry(function (arr, fn) {\n  return arr.filter(function (item, index, self) {\n    return index === self.findIndex(fn.bind(null, item));\n  });\n});\nvar equals = exports.equals = curry(function (a, b) {\n  return a === b;\n});\nvar eqBy = exports.eqBy = curry(function (fn, a, b) {\n  return equals(fn.call(null, a), fn.call(null, b));\n});\nvar find = exports.find = curry(function (pred, arr) {\n  return arr.find(pred);\n});\n\nfunction printIt(item) {\n  console.log(\"to print\", item);\n  return item;\n}\n\nvar without = exports.without = curry(function (discardArr, arr) {\n  return arr.filter(function (item) {\n    return !discardArr.some(equals(item));\n  });\n});\nvar startsWith = exports.startsWith = curry(function (prefix, str) {\n  if (!str) {\n    return false;\n  } else {\n    return str.indexOf(prefix) === 0;\n  }\n});\n\nfunction first(list) {\n  return list[0];\n}\n\nvar head = exports.head = first;\n\nfunction tail(list) {\n  return list.slice(1);\n}\n\nvar any = exports.any = curry(function (pred, list) {\n  if (list && list.some && typeof list.some === \"function\") {\n    return list.some(pred);\n  } else {\n    return list.reduce(function (acc, item) {\n      return acc || pred(item);\n    }, false);\n  }\n});\nvar findIndex = exports.findIndex = curry(function (finder, list) {\n  if (!list) {\n    return -1;\n  }\n\n  var itemIndex = -1;\n\n  for (var i = 0; i < list.length; i++) {\n    if (finder(list[i])) {\n      itemIndex = i;\n      break;\n    }\n  }\n\n  return itemIndex;\n});\nvar R = {\n  any: any,\n  curry: curry,\n  assoc: assoc,\n  assocPath: assocPath,\n  append: append,\n  prepend: prepend,\n  concat: concat,\n  pipe: pipe,\n  negate: negate,\n  dedupe: dedupe,\n  equals: equals,\n  eqBy: eqBy,\n  prop: prop,\n  propEq: propEq,\n  eqProps: eqProps,\n  find: find,\n  without: without,\n  update: update,\n  printIt: printIt,\n  first: first,\n  head: head,\n  tail: tail,\n  startsWith: startsWith,\n  findIndex: findIndex\n};\nexports.default = R;","map":{"version":3,"sources":["/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/cramda/lib/cramda.js"],"names":["Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","negate","printIt","first","tail","_toConsumableArray","arr","Array","isArray","arr2","from","_defineProperty","obj","enumerable","configurable","writable","curry","fn","_len","args","_key","bind","apply","concat","undefined","assoc","val","assocPath","keyPath","slice","set1","set2","idx","result","prop","propEq","equals","eqProps","o1","o2","update","index","findAndUpdate","findFn","findIndex","prepend","el","append","pipe","_len2","fns","_key2","reduce","acc","context","dedupe","filter","item","self","a","b","eqBy","find","pred","console","log","without","discardArr","some","startsWith","prefix","str","indexOf","list","head","any","finder","itemIndex","R","default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nexports.negate = negate;\nexports.printIt = printIt;\nexports.first = first;\nexports.tail = tail;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar curry = exports.curry = function curry(fn) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return fn.length > args.length ? curry(fn.bind.apply(fn, [null].concat(args))) : fn.apply(undefined, args);\n  };\n};\n\nvar assoc = exports.assoc = curry(function (key, val, obj) {\n  return _extends({}, obj, _defineProperty({}, key, val));\n});\n\nvar assocPath = exports.assocPath = curry(function (keyPath, val, obj) {\n  if (keyPath.length === 0) {\n    return val;\n  }\n\n  if (keyPath.length === 1) {\n    return assoc(keyPath[0], val, obj);\n  } else {\n    return _extends({}, obj, _defineProperty({}, keyPath[0], assocPath(keyPath.slice(1), val, obj[keyPath[0]])));\n  }\n});\n\n// concatenate two arrays\n// if set1 = [2, 4, 5] and set2 = [6, 0] then concat(set1, set2) = [2, 4, 5, 6, 0]\nvar concat = exports.concat = curry(function (set1, set2) {\n  set1 = set1 || [];\n  set2 = set2 || [];\n  var idx = 0;\n  var result = [];\n\n  while (idx < set1.length) {\n    result[result.length] = set1[idx++];\n  }\n  idx = 0;\n  while (idx < set2.length) {\n    result[result.length] = set2[idx++];\n  }\n\n  return result;\n});\n\n/**\n * given an object and a property name, returns the value of that property in the object\n * super complicated :)\n * but get really useful as a curried function\n */\nvar prop = exports.prop = curry(function (prop, obj) {\n  return obj[prop];\n});\n\n/**\n * given a property name and a value, check if the property in the object equals the given value\n * e.g. propEq('id', 1, {id: 1, name: 'mukesh'}) === true\n * e.g. propEq('id', 2, {id: 1, name: 'mukesh'}) === false\n */\nvar propEq = exports.propEq = curry(function (prop, val, obj) {\n  return equals(val, obj[prop]);\n});\n\n/**\n * Tells whether the two objects have same value for a property\n * E.g. p1 = {fname: 'rustom', lname: 'yadav'}; p2 = { fname: 'kuldev', lname: 'yadav'}\n * then eqProps('lname', p1, p2) === true\n * but eqProps('fname', p1, p2) === false\n */\nvar eqProps = exports.eqProps = curry(function (prop, o1, o2) {\n  return equals(o1[prop], o2[prop]);\n});\n\n/**\n * In a given list, update the value at a particular index\n * E.g. update(10, 2, [0,1,2,3,4]) === [0,1,10,3,4]\n */\nvar update = exports.update = curry(function (index, val, arr) {\n  if (index >= 0 && index < arr.length) {\n    return [].concat(_toConsumableArray(arr.slice(0, index)), [val], _toConsumableArray(arr.slice(index + 1)));\n  } else {\n    return arr;\n  }\n});\n\n/**\n * find a value inside a list/array and replace with a given value\n */\nvar findAndUpdate = exports.findAndUpdate = curry(function (findFn, val, arr) {\n  var index = arr.findIndex(findFn);\n  if (index >= 0) {\n    return update(index, val, arr);\n  } else {\n    return arr;\n  }\n});\n\n// prepend an element to an array\n// e.g. prepend(4, [0, 1]) = [4, 0, 1]\nvar prepend = exports.prepend = curry(function (el, arr) {\n  return concat([el], arr);\n});\n\n// append an element to end of an array\n// e.g. append(4, [0, 1]) = [0, 1, 4]\nvar append = exports.append = curry(function (el, arr) {\n  return concat(arr, [el]);\n});\n\nvar pipe = exports.pipe = function pipe() {\n  for (var _len2 = arguments.length, fns = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    fns[_key2] = arguments[_key2];\n  }\n\n  return function () {\n    return fns.reduce(function (acc, fn) {\n      return [fn.apply(null, acc)];\n    }, arguments)[0];\n  };\n};\n\nfunction negate(fn, context) {\n  return function () {\n    return !fn.apply(context, arguments);\n  };\n}\n\nvar dedupe = exports.dedupe = curry(function (arr, fn) {\n  return arr.filter(function (item, index, self) {\n    return index === self.findIndex(fn.bind(null, item));\n  });\n});\n\nvar equals = exports.equals = curry(function (a, b) {\n  return a === b;\n});\n\nvar eqBy = exports.eqBy = curry(function (fn, a, b) {\n  return equals(fn.call(null, a), fn.call(null, b));\n});\n\nvar find = exports.find = curry(function (pred, arr) {\n  return arr.find(pred);\n});\n\nfunction printIt(item) {\n  console.log(\"to print\", item);\n  return item;\n}\n\nvar without = exports.without = curry(function (discardArr, arr) {\n  return arr.filter(function (item) {\n    return !discardArr.some(equals(item));\n  });\n});\n\nvar startsWith = exports.startsWith = curry(function (prefix, str) {\n  if (!str) {\n    return false;\n  } else {\n    return str.indexOf(prefix) === 0;\n  }\n});\n\nfunction first(list) {\n  return list[0];\n}\n\nvar head = exports.head = first;\n\nfunction tail(list) {\n  return list.slice(1);\n}\n\nvar any = exports.any = curry(function (pred, list) {\n  if (list && list.some && typeof list.some === \"function\") {\n    return list.some(pred);\n  } else {\n    return list.reduce(function (acc, item) {\n      return acc || pred(item);\n    }, false);\n  }\n});\n\nvar findIndex = exports.findIndex = curry(function (finder, list) {\n  if (!list) {\n    return -1;\n  }\n\n  var itemIndex = -1;\n\n  for (var i = 0; i < list.length; i++) {\n    if (finder(list[i])) {\n      itemIndex = i;\n      break;\n    }\n  }\n\n  return itemIndex;\n});\n\nvar R = {\n  any: any,\n  curry: curry,\n  assoc: assoc,\n  assocPath: assocPath,\n  append: append,\n  prepend: prepend,\n  concat: concat,\n  pipe: pipe,\n  negate: negate,\n  dedupe: dedupe,\n  equals: equals,\n  eqBy: eqBy,\n  prop: prop,\n  propEq: propEq,\n  eqProps: eqProps,\n  find: find,\n  without: without,\n  update: update,\n  printIt: printIt,\n  first: first,\n  head: head,\n  tail: tail,\n  startsWith: startsWith,\n  findIndex: findIndex\n};\n\nexports.default = R;\n"]},"metadata":{},"sourceType":"script"}