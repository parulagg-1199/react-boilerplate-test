{"ast":null,"code":"import _objectWithoutProperties from \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/src/routes/ProtectedRoute.js\";\n\nimport { checkAuth } from './Route';\nimport React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n/**\n *\n * @param Component\n * @param rest\n * @returns {*}\n * @constructor\n * ToDo: edit the following details\n * The purpose of this constant is to-\n * check wheather user is logged in or logged out,\n * if logged in - user can visit any routes (eg. /tenants, /users, /hosta)\n */\n\nexport var ProtectedRoute = function ProtectedRoute(_ref) {\n  var Component = _ref.component,\n      rest = _objectWithoutProperties(_ref, [\"component\"]);\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: function render(props) {\n      return checkAuth() ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/dashboard\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["/home/xs119-paragg/Downloads/boilerplate/react-boilerplate/src/routes/ProtectedRoute.js"],"names":["checkAuth","React","Redirect","Route","ProtectedRoute","Component","component","rest","props"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,SAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,KAAlB,QAA8B,kBAA9B;AAEA;;;;;;;;;;;;AAYA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,MAAaC,SAAb,QAAEC,SAAF;AAAA,MAA2BC,IAA3B;;AAAA,sBAC1B,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAE,gBAAAC,KAAK,EAAI;AAC9B,aAAOR,SAAS,kBACZ,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADY,gBAEV,oBAAC,SAAD,oBAAeQ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFN;AAGH,KAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAD0B;AAAA,CAAvB","sourcesContent":["import { checkAuth } from './Route';\nimport React from 'react'\nimport {Redirect, Route} from 'react-router-dom';\n\n/**\n *\n * @param Component\n * @param rest\n * @returns {*}\n * @constructor\n * ToDo: edit the following details\n * The purpose of this constant is to-\n * check wheather user is logged in or logged out,\n * if logged in - user can visit any routes (eg. /tenants, /users, /hosta)\n */\n\nexport const ProtectedRoute = ({component: Component, ...rest}) => (\n    <Route {...rest} render={props => {\n        return checkAuth() ?\n            <Redirect to='/dashboard'/>\n            : <Component {...props}/>\n    }}/>\n);"]},"metadata":{},"sourceType":"module"}